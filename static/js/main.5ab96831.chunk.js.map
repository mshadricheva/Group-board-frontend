{"version":3,"sources":["LessonForm.js","Modal.js","Timetable.js","App.js","serviceWorker.js","index.js"],"names":["LessonForm","makeStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","props","handleClick","e","console","log","state","axios","post","then","response","window","location","reload","catch","error","alert","preventDefault","handleTeacherChange","event","teacher","target","value","handleLessonChange","name","handleLessonNumberChange","lesson_number","handleRoomChange","room","lesson","week_day","classes","styles","className","this","root","onSubmit","autoComplete","TextField","id","label","onChange","defaultValue","type","Button","Component","useStyles","modal","display","alignItems","justifyContent","TransitionsModal","React","useState","open","setOpen","onClick","text","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","LessonCard","Fragment","Grid","item","xs","Card","key","_id","CardContent","Typography","color","CardActions","delete","WeekDay","day","AddButton","Timetable","data","container","map","direction","toLowerCase","App","loading","CircularProgress","setTimeout","fetch","json","setState","JSON","parse","getLoader","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"waAwFeA,GAjFGC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,gBAAiBF,EAAMG,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWN,EAAMO,QAAQ,GACzBC,QAASR,EAAMS,QAAQ,EAAG,EAAG,Q,kDAMjC,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,YAAc,SAACC,GACXC,QAAQC,IAAI,EAAKC,OACjBC,IAAMC,KAAK,uEAAwE,EAAKF,OACnFG,MAAK,SAASC,GACXN,QAAQC,IAAIK,GACZC,OAAOC,SAASC,QAAO,MAE1BC,OAAM,SAASC,GACZC,MAAM,qHAGdb,EAAEc,kBArBa,EAwBnBC,oBAAsB,SAACC,GACnB,EAAKb,MAAMc,QAAUD,EAAME,OAAOC,OAzBnB,EA2BnBC,mBAAqB,SAACJ,GAClB,EAAKb,MAAMkB,KAAOL,EAAME,OAAOC,OA5BhB,EA8BnBG,yBAA2B,SAACN,GACxB,EAAKb,MAAMoB,cAAgBP,EAAME,OAAOC,OA/BzB,EAiCnBK,iBAAmB,SAACR,GAChB,EAAKb,MAAMsB,KAAOT,EAAME,OAAOC,OAhC3BrB,EAAM4B,OACN,EAAKA,OAAS5B,EAAM4B,OAEpB,EAAKA,OAAS,CAACL,KAAM,GAAIE,cAAe,GAAIN,QAAS,GAAIQ,KAAM,GAAIE,SAAU7B,EAAM6B,UACvF,EAAKC,QAAU9B,EAAM+B,OACrB,EAAK1B,MAAQ,EAAKuB,OAPH,E,qDAsCT,IAAD,OACL,OACI,yBAAKI,UAAWC,KAAKH,QAAQvC,OACzB,0BAAMyC,UAAWC,KAAKH,QAAQI,KAAMC,SAAU,SAACjC,GAAD,OAAO,EAAKD,YAAYC,IAAIkC,aAAa,OACnF,kBAACC,EAAA,EAAD,CACIC,GAAG,OACHC,MAAM,SACNC,SAAU,SAACtC,GAAD,OAAO,EAAKoB,mBAAmBpB,IACzCuC,aAAcR,KAAKL,OAASK,KAAKL,OAAOL,KAAO,OAAQ,6BAC3D,kBAACc,EAAA,EAAD,CACIC,GAAG,UACHC,MAAM,UACNC,SAAU,SAACtC,GAAD,OAAO,EAAKe,oBAAoBf,IAC1CuC,aAAcR,KAAKL,OAASK,KAAKL,OAAOT,QAAW,OAAQ,6BAC/D,kBAACkB,EAAA,EAAD,CACIC,GAAG,OACHC,MAAM,OACNC,SAAU,SAACtC,GAAD,OAAO,EAAKwB,iBAAiBxB,IACvCuC,aAAcR,KAAKL,OAASK,KAAKL,OAAOD,KAAO,OAAQ,6BAC3D,kBAACU,EAAA,EAAD,CACIC,GAAG,SACHC,MAAM,SACNG,KAAK,SACLF,SAAU,SAACtC,GAAD,OAAO,EAAKsB,yBAAyBtB,IAC/CuC,aAAcR,KAAKL,OAASK,KAAKL,OAAOH,cAAe,OAAQ,6BACnE,kBAACkB,EAAA,EAAD,CAAQD,KAAK,SAASV,UAAW,cAAjC,c,GAhEKY,cCTnBC,EAAYxD,aAAW,SAACC,GAAD,MAAY,CACrCwD,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpB1D,MAAO,CACHC,gBAAiBF,EAAMG,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWN,EAAMO,QAAQ,GACzBC,QAASR,EAAMS,QAAQ,EAAG,EAAG,QAItB,SAASmD,EAAiBlD,GACrC,IAAM8B,EAAUe,IAD4B,EAEpBM,IAAMC,UAAS,GAFK,mBAErCC,EAFqC,KAE/BC,EAF+B,KAY5C,OACI,oCACI,kBAACX,EAAA,EAAD,CAAQD,KAAK,SAASV,UAAW,YAAauB,QAVnC,WACfD,GAAQ,KAUCtD,EAAMwD,MAEX,kBAACC,EAAA,EAAD,CACIC,kBAAgB,yBAChBC,mBAAiB,+BACjB3B,UAAWF,EAAQgB,MACnBO,KAAMA,EACNO,QAdQ,WAChBN,GAAQ,IAcAO,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,MAGb,kBAACC,EAAA,EAAD,CAAMC,GAAId,GACN,kBAAC,EAAD,CAAYzB,OAAQ5B,EAAM4B,OAAQC,SAAU7B,EAAM6B,SAAUE,OAAQD,OCxCxF,SAASsC,EAAWpE,GAMhB,OAA2B,MAAvBA,EAAM4B,OAAN,IAEI,kBAAC,IAAMyC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CAAMzC,UAAW,kBAAmB0C,IAAK1E,EAAM4B,OAAO+C,KAClD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAY7C,UAAWhC,EAAM4B,OAAOL,KAAMuD,MAAM,iBAAhD,WACa9E,EAAM4B,OAAOL,MAE1B,kBAACsD,EAAA,EAAD,CAAY7C,UAAWhC,EAAM4B,OAAOT,QAAS2D,MAAM,iBAAnD,YACc9E,EAAM4B,OAAOT,SAE3B,kBAAC0D,EAAA,EAAD,CAAY7C,UAAWhC,EAAM4B,OAAOD,KAAMmD,MAAM,iBAAhD,SACW9E,EAAM4B,OAAOD,MAExB,kBAACkD,EAAA,EAAD,CAAY7C,UAAWhC,EAAM4B,OAAOH,cAAeqD,MAAM,iBAAzD,WACa9E,EAAM4B,OAAOH,gBAG9B,kBAACsD,EAAA,EAAD,KACI,kBAAC7B,EAAD,CAAkBM,KAAM,gBAAiB5B,OAAQ5B,EAAM4B,UAE3D,kBAACmD,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAQD,KAAK,SAASV,UAAW,YAAauB,QA3BjD,WACjBjD,IAAM0E,OAAO,6DAA8D,CAAC,KAAQhF,EAAM4B,WA0BtE,cAShB,qCAGZ,SAASqD,EAAQjF,GACb,OACI,kBAAC,IAAMqE,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CAAMC,IAAK1E,EAAMkF,IAAI,IACjB,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,eACb9E,EAAMkF,IAAI,QAQvC,SAASC,EAAUnF,GACf,OACI,kBAAC,IAAMqE,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAMzC,UAAW,aACb,kBAAC+C,EAAA,EAAD,KACI,kBAAC7B,EAAD,CAAkBM,KAAM,aAAc3B,SAAU7B,EAAM6B,SAAUD,OAAQ,W,IAiCjFwD,E,kDAvBX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IACDqF,KAAOrF,EAAMqF,KAFH,E,qDAKT,IAAD,OACL,OAAO,wCAAG,kBAACf,EAAA,EAAD,CAAMgB,WAAS,EAACvF,QAAS,GAC9B,CAAC,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,aAAawF,KAAI,SAACL,GAAD,OACpG,oCACI,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMgB,WAAS,EAACvF,QAAS,EAAGyF,UAAW,UACnC,kBAACP,EAAD,CAASC,IAAKA,IACb,EAAKG,KAAKH,EAAI,IAAIK,KAAI,SAAC3D,GAAD,OACnB,kBAACwC,EAAD,CAAYxC,OAAQA,OAEpB,kBAACuD,EAAD,CAAWtD,SAAUqD,EAAI,GAAGO,4B,GAhBpCtC,IAAMP,W,SCnDf8C,E,kDA1BX,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAM,CACPsF,SAAS,EACTN,KAAM,IAJK,E,wDASf,OAAO,kBAACO,EAAA,EAAD,Q,2CAGW,IAAD,OACjBC,YAAW,kBAAMC,MAAM,+DAClBtF,MAAK,SAACC,GAAD,OAAcA,EAAS+C,UAC5BhD,MAAK,SAACuF,GACH,EAAKC,SAAS,CAACL,SAAS,EAAON,KAAMY,KAAKC,MAAMH,OACjD,QAAO,O,+BAId,OAAO,oCAAE,gDACJ9D,KAAK5B,MAAMsF,QAAU1D,KAAKkE,YAAc,kBAAC,EAAD,CAAWd,KAAMpD,KAAK5B,MAAMgF,Y,GAvB/DlC,IAAMP,WCOJwD,QACW,cAA7B1F,OAAOC,SAAS0F,UAEe,UAA7B3F,OAAOC,SAAS0F,UAEhB3F,OAAOC,SAAS0F,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaC,gBAEdnG,OAAM,SAAAC,GACLX,QAAQW,MAAMA,EAAMmG,c","file":"static/js/main.5ab96831.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\n\r\nclass LessonForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (props.lesson)\r\n            this.lesson = props.lesson\r\n        else\r\n            this.lesson = {name: '', lesson_number: '', teacher: '', room: '', week_day: props.week_day};\r\n        this.classes = props.styles;\r\n        this.state = this.lesson;\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        console.log(this.state)\r\n        axios.post('http://afternoon-caverns-61867.herokuapp.com/api/v1/create_or_update', this.state)\r\n            .then(function(response) {\r\n                console.log(response);\r\n                window.location.reload(true);\r\n            })\r\n            .catch(function(error){\r\n                alert('Некорректная запись!');\r\n                //Perform action based on error\r\n            });\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleTeacherChange = (event) => {\r\n        this.state.teacher = event.target.value;\r\n    }\r\n    handleLessonChange = (event) => {\r\n        this.state.name = event.target.value;\r\n    }\r\n    handleLessonNumberChange = (event) => {\r\n        this.state.lesson_number = event.target.value;\r\n    }\r\n    handleRoomChange = (event) => {\r\n        this.state.room = event.target.value;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.classes.paper}>\r\n                <form className={this.classes.root} onSubmit={(e) => this.handleClick(e)} autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"name\"\r\n                        label=\"Lesson\"\r\n                        onChange={(e) => this.handleLessonChange(e)}\r\n                        defaultValue={this.lesson ? this.lesson.name : null} /><br/>\r\n                    <TextField\r\n                        id=\"teacher\"\r\n                        label=\"Teacher\"\r\n                        onChange={(e) => this.handleTeacherChange(e)}\r\n                        defaultValue={this.lesson ? this.lesson.teacher  : null} /><br/>\r\n                    <TextField\r\n                        id=\"room\"\r\n                        label=\"Room\"\r\n                        onChange={(e) => this.handleRoomChange(e)}\r\n                        defaultValue={this.lesson ? this.lesson.room : null} /><br/>\r\n                    <TextField\r\n                        id=\"number\"\r\n                        label=\"Number\"\r\n                        type=\"number\"\r\n                        onChange={(e) => this.handleLessonNumberChange(e)}\r\n                        defaultValue={this.lesson ? this.lesson.lesson_number: null} /><br/>\r\n                    <Button type=\"submit\" className={\"saveLesson\"}>Save</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LessonForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport LessonForm from \"./LessonForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"button\" className={\"openModal\"} onClick={handleOpen}>\r\n                {props.text}\r\n            </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <LessonForm lesson={props.lesson} week_day={props.week_day} styles={classes}/>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './Timetable.css';\r\nimport TransitionsModal from \"./Modal\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction LessonCard(props) {\r\n\r\n    const handleDelete = () => {\r\n        axios.delete('http://afternoon-caverns-61867.herokuapp.com/api/v1/delete', {'data': props.lesson})\r\n    }\r\n\r\n    if (props.lesson['_id'] != null) {\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={12}>\r\n                    <Card className={'lesson.week_day'} key={props.lesson._id}>\r\n                        <CardContent>\r\n                            <Typography className={props.lesson.name} color=\"textSecondary\">\r\n                                Lesson: {props.lesson.name}\r\n                            </Typography>\r\n                            <Typography className={props.lesson.teacher} color=\"textSecondary\">\r\n                                Teacher: {props.lesson.teacher}\r\n                            </Typography>\r\n                            <Typography className={props.lesson.room} color=\"textSecondary\">\r\n                                Room: {props.lesson.room}\r\n                            </Typography>\r\n                            <Typography className={props.lesson.lesson_number} color=\"textSecondary\">\r\n                                Number: {props.lesson.lesson_number}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <TransitionsModal text={\"Change lesson\"} lesson={props.lesson}/>\r\n                        </CardActions>\r\n                        <CardActions>\r\n                            <Button type=\"button\" className={\"openModal\"} onClick={handleDelete}>\r\n                                Delete\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    return (<></>);\r\n}\r\n\r\nfunction WeekDay(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={12}>\r\n                <Card key={props.day[0]}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\">\r\n                            {props.day[1]}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </React.Fragment>);\r\n}\r\n\r\nfunction AddButton(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={9}>\r\n                <Card className={\"addLesson\"}>\r\n                    <CardActions>\r\n                        <TransitionsModal text={\"Add lesson\"} week_day={props.week_day} lesson={null}/>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nclass Timetable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = props.data;\r\n    }\r\n\r\n    render() {\r\n        return <> <Grid container spacing={4}>\r\n            {[[0, 'Monday'], [1, 'Tuesday'], [2, 'Wednesday'], [3, 'Thursday'], [4, 'Friday'], [5, 'Saturday']].map((day) => (\r\n                <>\r\n                    <Grid item xs={2}>\r\n                        <Grid container spacing={4} direction={\"column\"}>\r\n                            <WeekDay day={day}/>\r\n                            {this.data[day[0]].map((lesson) => (\r\n                                <LessonCard lesson={lesson}/>\r\n                                ))}\r\n                                <AddButton week_day={day[1].toLowerCase()}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>))}\r\n        </Grid></>\r\n    }\r\n}\r\n\r\nexport default Timetable","import React from 'react';\r\nimport './App.css';\r\nimport Timetable from './Timetable'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            loading: true,\r\n            data: []\r\n        };\r\n    }\r\n\r\n    getLoader() {\r\n        return <CircularProgress/>;\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => fetch('http://afternoon-caverns-61867.herokuapp.com/api/v1/get_all')\r\n            .then((response) => response.text())\r\n            .then((json) => {\r\n                this.setState({loading: false, data: JSON.parse(json)})\r\n            }, null), 2000);\r\n    }\r\n\r\n    render() {\r\n        return <><h1>School timetable</h1>\r\n            {this.state.loading ? this.getLoader() : <Timetable data={this.state.data}/>}</>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}